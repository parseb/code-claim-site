/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MerkleProofWrapper,
  MerkleProofWrapperInterface,
} from "../MerkleProofWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102fc806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635a9a49c714610030575b600080fd5b61004361003e36600461015c565b61005e565b60408051921515835260208301919091520160405180910390f35b60008061006c858585610078565b91509150935093915050565b6000808281805b875181101561013a5761009360028361025e565b915060008882815181106100a9576100a961027d565b602002602001015190508084116100eb576040805160208101869052908101829052606001604051602081830303815290604052805190602001209350610127565b60408051602081018390529081018590526060016040516020818303038152906040528051906020012093506001836101249190610293565b92505b5080610132816102ab565b91505061007f565b50941495939450505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561017157600080fd5b833567ffffffffffffffff8082111561018957600080fd5b818601915086601f83011261019d57600080fd5b81356020828211156101b1576101b1610146565b8160051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811086821117156101f4576101f4610146565b60405292835281830193508481018201928a84111561021257600080fd5b948201945b8386101561023057853585529482019493820193610217565b9a918901359950506040909701359695505050505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561027857610278610248565b500290565b634e487b7160e01b600052603260045260246000fd5b600082198211156102a6576102a6610248565b500190565b60006000198214156102bf576102bf610248565b506001019056fea2646970667358221220fbc9988bf9ac34f6ab836918f323d60f462dff8640e2f823862c1854040e690764736f6c63430008090033";

export class MerkleProofWrapper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleProofWrapper> {
    return super.deploy(overrides || {}) as Promise<MerkleProofWrapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleProofWrapper {
    return super.attach(address) as MerkleProofWrapper;
  }
  connect(signer: Signer): MerkleProofWrapper__factory {
    return super.connect(signer) as MerkleProofWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleProofWrapperInterface {
    return new utils.Interface(_abi) as MerkleProofWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleProofWrapper {
    return new Contract(address, _abi, signerOrProvider) as MerkleProofWrapper;
  }
}
